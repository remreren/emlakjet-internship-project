server:
  port: 9090

spring:
  application:
    name: advert-consumer

  datasource:
    url: ${DATA_SOURCE_URL}
    username: ${DATA_SOURCE_USER}
    password: ${DATA_SOURCE_PASSWORD}

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
      group-id: advert-consumer
      client-id: ${spring.application.name}
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        auto.register.schemas: true
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL}
      auto.register.schemas: true

management:
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: health,info

elasticsearch:
  schema: http
  host: ${SPRING_ELASTICSEARCH_HOST}
  port: ${SPRING_ELASTICSEARCH_PORT}